CREATE SCHEMA test_schema;
CREATE EXTENSION test_copy_format WITH SCHEMA test_schema;
CREATE TABLE public.test (a smallint, b integer, c bigint);
INSERT INTO public.test VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SET search_path = public,test_schema;
COPY public.test FROM stdin WITH (FORMAT 'test_copy_format_wrong_input_type');
ERROR:  COPY format "test_copy_format_wrong_input_type" not recognized
LINE 1: COPY public.test FROM stdin WITH (FORMAT 'test_copy_format_w...
                                          ^
COPY public.test TO stdout WITH (FORMAT 'test_copy_format_wrong_input_type');
ERROR:  COPY format "test_copy_format_wrong_input_type" not recognized
LINE 1: COPY public.test TO stdout WITH (FORMAT 'test_copy_format_wr...
                                         ^
COPY public.test FROM stdin WITH (FORMAT 'test_copy_format_wrong_return_type');
ERROR:  function test_copy_format_wrong_return_type must return type copy_handler
LINE 1: COPY public.test FROM stdin WITH (FORMAT 'test_copy_format_w...
                                          ^
COPY public.test TO stdout WITH (FORMAT 'test_copy_format_wrong_return_type');
ERROR:  function test_copy_format_wrong_return_type must return type copy_handler
LINE 1: COPY public.test TO stdout WITH (FORMAT 'test_copy_format_wr...
                                         ^
COPY public.test FROM stdin WITH (FORMAT 'test_copy_format_wrong_return_value');
ERROR:  COPY handler function test_schema.test_copy_format_wrong_return_value did not return CopyFromRoutine struct
COPY public.test TO stdout WITH (FORMAT 'test_copy_format_wrong_return_value');
ERROR:  COPY handler function test_schema.test_copy_format_wrong_return_value did not return CopyToRoutine struct
RESET search_path;
COPY public.test FROM stdin WITH (FORMAT 'test_schema.test_copy_format_wrong_input_type');
ERROR:  COPY format "test_schema.test_copy_format_wrong_input_type" not recognized
LINE 1: COPY public.test FROM stdin WITH (FORMAT 'test_schema.test_c...
                                          ^
COPY public.test TO stdout WITH (FORMAT 'test_schema.test_copy_format_wrong_input_type');
ERROR:  COPY format "test_schema.test_copy_format_wrong_input_type" not recognized
LINE 1: COPY public.test TO stdout WITH (FORMAT 'test_schema.test_co...
                                         ^
COPY public.test FROM stdin WITH (FORMAT 'test_schema.test_copy_format_wrong_return_type');
ERROR:  function test_schema.test_copy_format_wrong_return_type must return type copy_handler
LINE 1: COPY public.test FROM stdin WITH (FORMAT 'test_schema.test_c...
                                          ^
COPY public.test TO stdout WITH (FORMAT 'test_schema.test_copy_format_wrong_return_type');
ERROR:  function test_schema.test_copy_format_wrong_return_type must return type copy_handler
LINE 1: COPY public.test TO stdout WITH (FORMAT 'test_schema.test_co...
                                         ^
COPY public.test FROM stdin WITH (FORMAT 'test_schema.test_copy_format_wrong_return_value');
ERROR:  COPY handler function test_schema.test_copy_format_wrong_return_value did not return CopyFromRoutine struct
COPY public.test TO stdout WITH (FORMAT 'test_schema.test_copy_format_wrong_return_value');
ERROR:  COPY handler function test_schema.test_copy_format_wrong_return_value did not return CopyToRoutine struct
COPY public.test FROM stdin WITH (FORMAT 'nonexistent');
ERROR:  COPY format "nonexistent" not recognized
LINE 1: COPY public.test FROM stdin WITH (FORMAT 'nonexistent');
                                          ^
COPY public.test TO stdout WITH (FORMAT 'nonexistent');
ERROR:  COPY format "nonexistent" not recognized
LINE 1: COPY public.test TO stdout WITH (FORMAT 'nonexistent');
                                         ^
COPY public.test FROM stdin WITH (FORMAT 'invalid.qualified.name');
ERROR:  cross-database references are not implemented: invalid.qualified.name
COPY public.test TO stdout WITH (FORMAT 'invalid.qualified.name');
ERROR:  cross-database references are not implemented: invalid.qualified.name
DROP TABLE public.test;
DROP EXTENSION test_copy_format;
DROP SCHEMA test_schema;
